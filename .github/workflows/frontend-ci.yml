name: Frontend Integration (CI)

on: 
    workflow_dispatch:
    pull_request:
        branches:
            - main

env:
    NODE_VERSION: 'latest'
    # path to the frontend root folder
    SRC_DIR: '${{ github.workspace }}/src/frontend/'
    ECR_REPO: '815822840554.dkr.ecr.us-west-2.amazonaws.com/frontend'

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
                
            - name: Setup NodeJS ${{env.NODE_VERSION}}
              uses: actions/setup-node@v3
              with:
                node-version: ${{env.NODE_VERSION}}
                cache: 'npm'
                cache-dependency-path: '${{ env.SRC_DIR}}/package-lock.json'
            # TODO: Perform a cache action to restore cache before deps install.
            - name: Install dependencies
              run: cd ${{env.SRC_DIR}} && npm ci
            
            - name: Run linter
              run: cd ${{env.SRC_DIR}} && npm run lint
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
                
            - name: Use NodeJS ${{env.NODE_VERSION}}
              uses: actions/setup-node@v3
              with:
                node-version: ${{env.NODE_VERSION}}
                cache: 'npm'
                cache-dependency-path: '${{ env.SRC_DIR}}/package-lock.json'
            # TODO: Perform a cache action to restore cache before deps install.
            - name: Install dependencies
              run: cd ${{env.SRC_DIR}} && npm ci
            
            - name: Build
              run: cd ${{env.SRC_DIR}} && npm test
    
    build:
        needs: [lint, test]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            
            # Configure AWS credentials
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # Use your stored AWS Access Key ID
                aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }} # Use your stored AWS Secret Access Key
                aws-region: ${{ env.AWS_REGION }} # Use the region from your environment variables
            
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
            
            - name: Build, tag, and push docker image to Amazon ECR
              env:
                REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                REPOSITORY: frontend
                IMAGE_TAG: ${{ github.sha }}
              run: |
                  cd ${{env.SRC_DIR}}
                  docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .

